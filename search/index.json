[{"content":"Meu Diário de Bordo Profissional Bem-vindo ao meu diário de bordo, um espaço onde documento os projetos, desafios e aprendizados mais marcantes da minha carreira como Especialista em Engenharia de Software e as vezes um Engenheiro de Plataforma.\nDiário de Bordo de um Engenheiro de Plataforma Como a importação de 45 mil catálogos para o Backstage revelou um limite não documentado. O Desafio: Mapeando o Legado com um IDP Após a intensidade do projeto anterior, nosso foco retornou para a construção da nossa Plataforma de Desenvolvedor Interno (IDP). A missão era clara, mas monumental: importar e mapear os catálogos de todo o nosso sistema legado para o Backstage. O objetivo era finalmente trazer visibilidade sobre as dependências de cada componente dentro do Oracle, algo que até então não estava documentado. O principal obstáculo era o volume: aproximadamente 45 mil catálogos registrados em um repositório Git, com todos os seus relacionamentos.\nA Investigação: O Mistério dos Erros 400 O processo de importação para o Backstage começou a falhar de forma consistente, retornando erros 400 Bad Request sem uma causa clara. Após dias investigando logs e configurações, a frustração começou a crescer. As tentativas convencionais não funcionavam, e a documentação oficial não oferecia pistas.\nFoi nesse ponto que decidi adotar uma abordagem mais drástica: em vez de apenas usar o plugin de discovery do Azure, eu iria reescrevê-lo. Meu objetivo era entender, linha por linha, como ele se comunicava com a API e por que nossas requisições estavam sendo rejeitadas.\nA Descoberta: O Limite Oculto da API Ao mergulhar no código e recriar as chamadas, a causa do problema finalmente apareceu. O code search do Azure possui um limite rígido e não documentado: a API não permite uma combinação de skip e take superior a 2.000 registros. Em outras palavras, era impossível paginar além do registro de número 2.000, o que tornava inviável a descoberta dos nossos 45 mil catálogos através de uma única consulta paginada.\nA Solução Aplicada Com a causa raiz identificada, a solução foi estratégica: segmentamos os 45 mil arquivos em múltiplas pastas. Agrupamos os catálogos por tipo e garantimos que cada pasta contivesse no máximo 2.000 itens, respeitando o limite da API. A nova abordagem funcionou. Notavelmente, enquanto a incorporação final das Entities no Backstage foi um processo gradual, a criação das Locations (os pontos de descoberta) foi praticamente instantânea, validando nossa estratégia e desbloqueando o processo.\nImpacto e Próximos Passos Essa descoberta não apenas resolveu nosso problema interno, mas também revelou uma falha crítica de documentação que poderia afetar inúmeros outros engenheiros. Como próximos passos, meu objetivo é duplo:\nContribuir com a comunidade: Aprimorar os logs do plugin de discovery do Azure para que erros como este sejam mais claros e fáceis de diagnosticar. Documentar a limitação: Tornar pública a informação sobre o limite do skip e take para que outros usuários da ferramenta não percam tempo investigando o mesmo problema. Essa experiência reforçou uma lição fundamental: às vezes, para resolver um problema complexo, é preciso ir além da documentação e mergulhar no código-fonte.\nDiário de Bordo de um Tech Lead Como superamos a incerteza e entregamos o projeto crítico. Minha jornada no Hapvida começou com um batismo de fogo: o projeto HomeCare. Em julho de 2025, nosso time de Engenharia recebeu a missão de entregar, em 45 dias, uma aplicação complexa que estava em espera há mais de seis meses. Este post é um diário de bordo dessa experiência, detalhando os desafios, as soluções e, mais importante, os aprendizados que tirei ao assumir uma liderança técnica em um cenário de alta pressão.\nO Ponto de Partida: Planejamento e Estimativa O primeiro passo foi entender o tamanho do monstro. Dedicamos quatro dias inteiros a uma Planning, quebrando a especificação funcional em Features e estimando cada tarefa. Foi um processo intenso de imersão que nos deu o prazo final: 45 dias. A partir daí, organizei nosso board em Épicos e Histórias, assumindo a responsabilidade não só de codificar, mas de orquestrar o time de desenvolvimento e ser a ponte com a equipe de QA.\nSprint 1: A Prova de Fogo e a Primeira Vitória Logo na primeira sprint, a realidade se impôs. Encontramos divergências claras entre a documentação e as informações que recebíamos. Cada dia parecia trazer uma nova mudança de escopo. Apesar disso, o time se manteve focado. Entregar aquela primeira parte e enviá-la para homologação foi crucial. Não era apenas código; era uma injeção de confiança de que, apesar dos problemas, éramos capazes.\nSprint 2: O Caos Organizado A segunda sprint foi, sem dúvida, o clímax da nossa saga. Estávamos lidando com o fluxo mais complexo da aplicação, envolvendo consultas pesadas em um banco de dados Oracle e requisitos que surgiam no meio do caminho. O golpe veio no último dia: descobrimos que um fluxo central estava funcionalmente errado, invalidando metade do nosso trabalho. A sensação foi de um soco no estômago. Tivemos que, em uma corrida contra o tempo, refazer tudo em apenas dois dias. Foi aqui que a resiliência e a sinergia do time foram postas à prova.\nSprint 3: A Reta Final Na última sprint, o caminho estava mais claro. Os incêndios das semanas anteriores nos fortaleceram e nos deram mais contexto sobre o projeto. Ainda que algumas inconsistências de informação persistissem, conseguíamos contorná-las com mais agilidade. Após muitas reuniões, trabalho focado e algumas horas extras inevitáveis, a linha de chegada apareceu. Entregamos o projeto.\nLições Aprendidas na Trincheira Essa experiência foi uma aceleração de carreira compactada em 45 dias. Saí dela com uma visão muito mais clara sobre o papel de uma liderança técnica e sobre gestão de projetos em ambientes de alta incerteza. Meus principais aprendizados foram:\nO Conhecimento é Cumulativo: O time ao final do projeto não é o mesmo do início. Se tivéssemos o conhecimento do último dia no primeiro, teríamos sido ainda mais rápidos. Estimativa sem Margem de Erro é Ilusão: Nenhuma tarefa é \u0026ldquo;simples\u0026rdquo;. Subestimar a complexidade é o caminho mais curto para atrasos. Sempre considere uma margem para o inesperado. O Tech Lead é um Facilitador: Meu papel mais importante não foi escrever o código mais brilhante, mas sim garantir que cada desenvolvedor tivesse o que precisava para fazer o seu melhor. Resolver um problema de acesso, por exemplo, era tão prioritário quanto corrigir um bug crítico. A Liderança Inspira pelo Exemplo: Em momentos de crise, a equipe olha para o líder. Transmitir calma e confiança de que o objetivo é alcançável é fundamental para manter a moral e o desempenho do time elevados. Agradecimentos e Trabalho em Equipe Tive de trabalhar ao lado de pessoas que são referencia e nos apoiaram nessa entrega.\nMatheus Ulisses (Gerente do time de Engenharia de Software) Guilherme Ferreira (Especialista em Engenharia de Software para React Mobile) Leonardo Oliveira (Especialista em Engenharia de Software para .NET) Daniel Alvez Paezani (Especialista em Engenharia de Software para Java) Ricardo Tanaka (Especialista em Engenharia de Software para Java) Thalya Oliveira (Desenvolvedora .NET) O projeto foi muito mais do que uma entrega no Hapvida. Foi a prova de que com um time com habilidades, experiência, maturidade, comunicação e muita resiliência, até os prazos mais impossíveis podem ser cumpridos.\n","date":"2025-09-23T20:00:00Z","image":"https://raphanogueira.dev/p/hapvida/capa_hu_82ff8f6df32a9e92.png","permalink":"https://raphanogueira.dev/p/hapvida/","title":"Em constante evolução: minha jornada atual no Hapvida"},{"content":"Como podemos capacitar nossos times de desenvolvimento para que entreguem valor com mais velocidade e segurança? Essa foi a pergunta central da minha palestra no 2º Meetup da Cloud Native Araraquara-SP, que aconteceu no último dia 19 de abril.\nFoi uma honra imensa aceitar o convite do Matheus Ulisses para compartilhar minha experiência com a comunidade. Durante o evento, demonstrei como a adoção de um Golden Path com a plataforma Backstage.io tem sido um divisor de águas para otimizar a jornada de engenharia.\nAbordei como essa estratégia resolve desafios críticos, permitindo:\nAcelerar o Time-to-Market: Reduzir o tempo de setup de novos serviços de dias para minutos, automatizando a criação de toda a infraestrutura e pipeline de CI/CD necessários. Fortalecer a Governança: Incorporar as melhores práticas de segurança, qualidade e conformidade desde a primeira linha de código, de forma padronizada para toda a organização. Potencializar a Inovação: Melhorar drasticamente a Developer Experience (DevX), abstraindo complexidades e permitindo que os desenvolvedores foquem na lógica de negócio e na criação de soluções de impacto. Agradeço a todos que participaram e contribuíram com perguntas excelentes. Quero deixar um agradecimento muito especial à minha noiva, Gabrielle Limoni, por ser meu grande apoio de sempre. A energia da comunidade de Araraquara é contagiante! Parabenizo também os organizadores por um evento de altíssimo nível.\nE na sua empresa, como vocês lidam com a padronização e o onboarding de novos projetos? Vamos conversar nos comentários!\nEvento ","date":"2025-04-19T09:00:00Z","image":"https://raphanogueira.dev/p/palestra-kcd-araraquara/capa_hu_291b5e46b13aa80f.jpeg","permalink":"https://raphanogueira.dev/p/palestra-kcd-araraquara/","title":"Do Zero ao Deploy em Minutos: Minha Palestra sobre Golden Paths no Meetup Cloud Native Araraquara"},{"content":"Análise de Erro 400 na Descoberta de Catálogo do Azure e Proposta de Melhoria Resumo do Problema Durante a execução do processo de descoberta de entidades (discovery) para popular o catálogo do Backstage a partir do Azure, foi observado um erro 400 Bad Request genérico. A falta de detalhes na resposta da API tornou a identificação da causa raiz um desafio.\nAnálise e Causa Raiz Após uma investigação aprofundada, foi necessário replicar o código do AzureDevOpsDiscoveryProcessor para adicionar logs detalhados, capturando o cabeçalho (header) e o corpo (body) da resposta da API do Azure. Com isso, conseguimos identificar o problema:\nA API de Code Search do Azure DevOps possui uma limitação que não permite o uso de parâmetros de paginação ($skip e $take) em consultas cujo resultado exceda 2.000 itens. Quando essa condição ocorre, a API retorna o erro 400 Bad Request com uma mensagem específica sobre o limite, que não era capturada pelo plugin.\nEsta limitação não está documentada nas seguintes fontes oficiais:\nDocumentação da API REST do Azure DevOps: Fetch Code Search Results Documentação do Plugin: Azure Catalog Module Ações Propostas Com base na análise, tomei a iniciativa de propor as seguintes melhorias na comunidade do Backstage:\nAtualizar a documentação do plugin: Adicionar uma nota sobre a limitação de 2.000 itens da API do Azure Search para alertar os usuários sobre possíveis falhas em repositórios muito grandes. Melhorar os Logs de Erro: Revisar o código do processor para garantir que, em caso de falha, o corpo da resposta da API seja incluído no log de erro. Isso fornecerá um feedback mais claro e relevante para quem estiver depurando problemas semelhantes no futuro. Próximos Passos O plano de ação para implementar esta contribuição está detalhado abaixo e será atualizado conforme o andamento:\nFork do Projeto: Criar um fork do repositório oficial backstage/backstage. Desenvolvimento: Aplicar as alterações necessárias na documentação e no código-fonte do plugin catalog-backend-module-azure. Pull Request: Abrir um Pull Request com as melhorias propostas para revisão da comunidade. Acompanhamento: Monitorar o feedback do PR e realizar os ajustes necessários até que a contribuição seja aceita e integrada (merged). ","date":"2025-08-23T21:00:00Z","image":"https://raphanogueira.dev/p/azure-discovey/capa_hu_87d5efc0d7ff7a4e.png","permalink":"https://raphanogueira.dev/p/azure-discovey/","title":"Descobrimento De Catálogos Através Do Azure"},{"content":"Minha jornada com o Backstage.io começou há cerca de um ano, quando iniciei o desafio de implementá-lo no ambiente corporativo. Desde o início, me identifiquei com o potencial da plataforma e tenho focado em aprender mais sobre ela a cada dia.\nAo longo desses meses, mergulhei na prática, implementando o descobrimento automático de entidades para o Software Catalog, desenvolvendo Software Templates customizados e desenvolvendo um plugin de telemetria interna para o backstage seguindo ótimas referências da comunidade Cloud Native.\nCom essa base prática sólida, decidi buscar a certificação Certified Backstage Associate (CBA) para formalizar meu conhecimento. Minha preparação final foi uma imersão focada: uma semana intensa de simulados para dominar o formato da prova, consolidando a experiência que adquiri no dia a dia.\nO resultado foi a aprovação! Fico à disposição para trocar ideias e ajudar quem também está nessa jornada. Se tiver qualquer dúvida, pode me chamar!\n","date":"2025-08-23T09:00:00Z","image":"https://raphanogueira.dev/p/cba/capa_hu_a4fb3abd485a2eb3.png","permalink":"https://raphanogueira.dev/p/cba/","title":"CBA"},{"content":"Plugin Analytics Interno para Backstage Após implementarmos o Backstage em nosso ambiente corporativo, sentimos a necessidade de obter métricas de uso: saber se a equipe estava acessando as documentações e quais eram as mais populares. Com isso em mente, criamos este plugin para gerenciar essas informações sem a necessidade de enviar dados para provedores externos.\nO plugin depende apenas do próprio Backstage, gerando seu frontend, backend e módulos necessários. A única dependência externa é um banco de dados PostgreSQL, que já é um requisito do Backstage desde sua configuração inicial.\nAbaixo seguem informações de configuração, instalação e exemplos visuais.\nEste é o plugin Analytics Interno para o Backstage.io.\nEste plugin fornece insights sobre a atividade dos usuários dentro da sua instância do Backstage.io, de forma nativa e sem a necessidade de ferramentas de análise externas. Ele também oferece a flexibilidade de encaminhar esses eventos para outras plataformas, se necessário.\nVocê pode obter as seguintes informações:\nVisualizações de tela Ações realizadas pelos usuários Contagem de acessos por item Registros de data e hora (timestamps) do primeiro e último acesso Uma visão detalhada para cada item, permitindo identificar quais usuários o acessaram. Backend do Analytics Interno Para instruções de instalação e mais detalhes sobre como este pacote funciona, consulte o README do backend.\nNota Importante: Este pacote opera de forma independente e é desacoplado de outros pacotes de analytics.\nFrontend do Analytics Interno Para instruções de instalação e mais detalhes sobre como este pacote funciona, consulte o README do frontend.\nNota Importante: Este pacote é fortemente acoplado ao pacote plugin-analytics-internal-backend e depende dele para funcionar.\nMódulo do Analytics Interno Para instruções de instalação e mais detalhes sobre como este pacote funciona, consulte o README do módulo.\nNota Importante: Este pacote é fortemente acoplado ao plugin-analytics-internal-backend. Uma configuração incorreta pode levar a erros, pois ele foi projetado para consumir dados do plugin de backend.\n","date":"2025-08-23T09:00:00Z","image":"https://raphanogueira.dev/p/plugin-telemetria-internal/capa_hu_87d5efc0d7ff7a4e.png","permalink":"https://raphanogueira.dev/p/plugin-telemetria-internal/","title":"Plugin De Telemetria Interna"},{"content":"Minha Jornada na 5by5: De Júnior a Especialista Para muitos, uma mudança de emprego pode parecer algo simples. Para mim, foi um mergulho no desconhecido. Eu estava no meu primeiro emprego, mas me sentia descontente e estagnado por atuar fora da área que realmente gostava. Foi então que conheci a 5by5. Já havia tentado uma vaga antes sem sucesso, mas na segunda tentativa, deu certo.\nO desafio? A proposta exigia que eu desse alguns passos para trás na minha carreira. Muitos talvez não estivessem dispostos a reduzir o salário em troca de conhecimento, mas acredito que não ter me acomodado naquele momento foi o que fez toda a diferença na minha vida.\nO Início da Jornada: Desafios e Aprendizados Fui contratado como Desenvolvedor Júnior, uma escolha que se provou acertada. Grande parte das tecnologias com as quais eu trabalharia era nova para mim: MongoDb, Redis, Microserviços, CQRS, Programação Assíncrona, Desenvolvimento Cloud, Kubernetes, Docker, CI/CD, Mensageria.\nMinha jornada na 5by5 começou oficialmente em 18 de novembro de 2019.\nFui alocado em um projeto chamado SICES, voltado para a venda de sistemas de energia solar. Foi ali que encontrei grandes mentores que foram fundamentais para o meu desenvolvimento. Deixo um agradecimento especial ao Celso Batista, Elcio Silva, Jean Carlos, Thiago Mendonça (Jesus) e Romildo Cruz, que confiaram no meu trabalho desde o primeiro dia e me deram todo o apoio necessário.\nNeste projeto, não só aprendi todas as tecnologias que mencionei, como também tive uma ascensão rápida de Júnior para Pleno. Tive pouco tempo no modelo presencial, pois a pandemia nos levou para o home office logo em seguida.\nCrescimento e Evolução: De Júnior a Sênior No início, minhas tarefas se concentravam na correção de bugs. Com o tempo, passei a ser responsável pelas integrações entre o backend e o frontend. Na fase final do projeto, fiquei encarregado da sustentação, onde o foco era melhorar a performance e a qualidade do código existente, otimizar consultas no Mongo e aplicar cache em pontos estratégicos. Foi um período de grande aprendizado sobre Design Patterns e sua importância.\nNessa época, comecei a me aventurar em Kubernetes. Com acesso aos pods, aprendi a obter logs, a investigar problemas em ambientes cloud e a atuar em incidentes. Foi ao entrar para o time de sustentação que minha carreira ganhou um norte claro e meus conhecimentos se tornaram mais sólidos.\nDurante esse período, também participei de um projeto pontual para o RH da Azul, que consistia em uma integração com a Gupy. Em uma equipe de três pessoas liderada pelo Romildo Cruz e com o Celso Batista como meu par, amadureci muito através das trocas de ideias.\nDe volta à sustentação da SICES, o time foi reestruturado e o Celso Batista retornou como nosso Tech Lead. Essa fase foi marcada por debates produtivos sobre novas features, onde minha maturidade técnica e meu conhecimento de negócio por estar no projeto desde o início foram cruciais para mitigar problemas antes mesmo do desenvolvimento.\nTudo isso, em um período de 2019 a 2022, culminou em uma ascensão profissional rápida, passando pelos níveis de Júnior, Pleno e Sênior.\nA Nova Fase: Hapvida e a Especialização Após um breve intervalo de três meses fora da 5by5, retornei para a eterna \u0026ldquo;sala 401\u0026rdquo;, mas desta vez em um projeto que mudaria minha carreira de vez: o Hapvida. Tive a sorte de trabalhar novamente com a mesma equipe de feras: Romildo Cruz como líder, Celso Batista e Elcio Silva como pares, e Jean Carlos como nosso arquiteto.\nAli, desenvolvi novas habilidades, trabalhando com .NET 6, CosmosDB (API do Mongo no Azure) e aprofundando meus conhecimentos em Cache, REST, Design Patterns e metodologias ágeis em ambiente cloud.\nApós quase dois anos atuando como desenvolvedor neste projeto B2B, recebi a oportunidade de me juntar ao time de Especialistas em Engenharia de Software no Hapvida, focado na área de .NET. Nesse cargo, pude realizar contribuições significativas para a companhia, como:\nCode Review: Garantia de qualidade, performance e legibilidade do código em diversos projetos. Provas de Conceito (POCs): Criação de guias para orientar desenvolvedores em temas como: FeatureFlags Conexão com múltiplos bancos de dados (Oracle, SQL Server) CDC (Change Data Capture) com Azure Functions e Kafka Geração de PDFs a partir de código HTML Uso avançado de Redis SemaphoreSlim para processamento em lote e gerenciamento de threads Implementação do SonarQube: Migrei a análise do Sonar de Dockerfiles para a pipeline do Azure, com quality gates no processo de build e release, além de integração com Pull Requests para comentários automáticos. Implementação do Backstage: Adotamos um IDP (Internal Developer Platform) para mapear todos os projetos (incluindo legados), padronizar templates para criação rápida e assertiva de novos serviços, e integrar com o Azure para telemetria de uso e métricas de desenvolvimento. Compartilhando Conhecimento Durante esses anos, também tive a oportunidade de ministrar palestras e treinamentos internos na 5by5:\nSonarQube: Apresentei os ganhos da ferramenta e demonstrei como implementá-la de forma prática e assertiva na esteira de desenvolvimento. ConectCon: Apresentei o conceito de \u0026ldquo;Golden Path\u0026rdquo; utilizando Backstage, mostrando como era possível refletir alterações de NetworkPolicies em Kubernetes através de uma simples mudança no catálogo do backstage. Fim de um Ciclo e Gratidão Meu ciclo na 5by5 se encerrou em junho de 2025, quando recebi uma proposta de internalização do próprio Hapvida. Sou eternamente grato a todos que contribuíram com a minha carreira. Deixo aqui um agradecimento especial também ao Rodrigo Carvalho, com quem tive uma proximidade maior após entrar para o time de Especialistas.\nA 5by5 foi a base que impulsionou minha trajetória, e levarei os aprendizados e as amizades para sempre.\n","date":"2019-11-14T12:00:00Z","image":"https://raphanogueira.dev/p/5by5/capa_hu_6fa6611053ca786a.png","permalink":"https://raphanogueira.dev/p/5by5/","title":"O Grande Divisor de Águas da Minha Carreira: Minha História na 5by5"},{"content":"Para muitos, o primeiro emprego é um marco inesquecível. Para mim, a Cast foi isso e muito mais: foi a porta de entrada para o universo da tecnologia e a base fundamental de toda a minha carreira.\nTudo começou em 4 de abril de 2017, quando fui selecionado para um treinamento intensivo de três meses em .NET. Ali, dei meus primeiros passos, aprendendo os fundamentos que me preparariam para os desafios reais do mercado. Ao final desse período, a grande notícia: fui contratado como estagiário.\nNeste post, quero compartilhar como essa primeira oportunidade se transformou em uma jornada incrível de evolução profissional.\nOs Primeiros Passos: O Treinamento e o Estágio Como estagiário, fui integrado a um time com excelentes mentores, entre eles Julio César e Fabio Y. Frushio, que me apoiaram muito nessa chegada e durante toda a minha jornada na Cast. Minhas primeiras responsabilidades foram cruciais para meu desenvolvimento:\nAuxiliar no desenvolvimento de novas telas para o sistema COSIP em ASP.NET, utilizando MVC, WCF e NHibernate. Resolver problemas complexos de performance e acesso a dados utilizando NHibernate. Realizar correções e melhorias em código legado. Foi um período de imersão total. Cada tarefa era uma aula e cada bug corrigido, uma pequena vitória.\nA Primeira Conquista: Programador Júnior e seus desafios Após um ano de dedicação e muito aprendizado, tive a alegria de ser um dos selecionados para a efetivação como Programador Júnior. Esse foi um momento de grande orgulho e a confirmação de que eu estava no caminho certo.\nCom a nova posição, vieram maiores responsabilidades. Meu primeiro grande desafio como júnior foi assumir um sistema chamado Simples Nacional, um projeto responsável por validar malhas fiscais e gerar relatórios. Foi nesse período que solidifiquei minha base na resolução de problemas complexos e em minha lógica de programação, seja para entender, depurar ou corrigir bugs em código legado. Hoje em dia, acredito que esse projeto me ajudou muito na forma como identifico problemas em código e a como lidar com a pressão de projetos complexos.\nAlém do Júnior: Os desafios e responsabilidades do Desenvolvedor Pleno A evolução continuou e, após mais um ano de entregas consistentes e busca por novos conhecimentos, fui promovido a Desenvolvedor Pleno. Essa transição marcou minha passagem de um profissional que executava tarefas para um que propunha soluções, com mais autonomia e responsabilidade sobre projetos críticos.\nFoi como Pleno que tive a chance de liderar tecnicamente uma das iniciativas mais gratificantes da minha carreira na empresa:\nProjeto INVEPAR:\nO Desafio: Não havia mais vagas para desenvolvedor .NET neste projeto, então me aventurei em Angular 7, algo totalmente diferente para mim. Além de ser um contexto totalmente novo, era um projeto de uma concessionária de rodovias. Tive esse desafio de aprender uma nova linguagem logo após a promoção. Minha Contribuição: Fui responsável por desenvolver telas e realizar grande parte das integrações entre o frontend e o backend, por ter um bom conhecimento na segunda área. O Resultado: Consegui obter conhecimento referente ao frontend que, posteriormente, me ajudou muito em diversas atividades, inclusive com o que trabalho hoje. Além disso, fui o único desenvolvedor frontend em um projeto interno que viria na sequência. Projeto Interno:\nO Desafio: Assumir a liderança do frontend em um projeto interno. Minha Contribuição: Construir o projeto em todas as suas camadas de front-end, desde o login até camadas complexas de telemetria, entre outras telas. O Resultado: Consegui construir um conhecimento sólido em frontend baseado em Angular 7, além de melhorar minha lógica e facilidade para aprender novas linguagens. Acredito que me desenvolvi muito bem tecnicamente, melhorei bastante a minha comunicação e consegui auxiliar os outros desenvolvedores backend. Lições Que Moldaram Minha Carreira Olhando para trás, a experiência na Cast foi uma verdadeira escola. Os principais aprendizados que levo comigo são:\nTécnicos: Construí uma base sólida em .NET e a expandi para Angular 7, desenvolvendo a capacidade de auxiliar membros do meu time. A prática constante me tornou proficiente em resolver problemas técnicos complexos e aprimorou minha lógica de programação. Metodologias: Vivenciei a aplicação de metodologias ágeis como Scrum e Kanban em projetos reais, entendendo a importância da comunicação e da entrega contínua de valor. Habilidades Interpersonais: Aprendi a trabalhar em equipe, a receber e dar feedbacks construtivos e a comunicar ideias técnicas de forma clara para diferentes públicos. Conclusão Minha trajetória na Cast foi muito mais do que uma linha no currículo; foi a jornada que me transformou de um iniciante entusiasmado em um desenvolvedor confiante e com experiência nas duas frentes de desenvolvimento.\nSou imensamente grato à Cast por ter me dado a primeira oportunidade, mesmo sem ter conhecimentos sólidos na minha entrada, pelos desafios que me tiraram da zona de conforto e, acima de tudo, pelos líderes e colegas que me mentoraram e acreditaram no meu potencial. Essa experiência não foi apenas uma base, foi o alicerce que me preparou para todos os próximos passos da minha carreira.\n","date":"2017-04-04T09:00:00Z","image":"https://raphanogueira.dev/p/cast/capa_hu_8deca0ab57976bd5.jpg","permalink":"https://raphanogueira.dev/p/cast/","title":"Cast: Onde Minha Carreira em Tecnologia Começou"}]